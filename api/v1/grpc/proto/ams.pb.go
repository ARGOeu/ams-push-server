// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ams.proto

package ams

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Contains which subscription to deactivate
type DeactivateSubscriptionRequest struct {
	// Required. The full resource name of the subscrption.
	FullName             string   `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeactivateSubscriptionRequest) Reset()         { *m = DeactivateSubscriptionRequest{} }
func (m *DeactivateSubscriptionRequest) String() string { return proto.CompactTextString(m) }
func (*DeactivateSubscriptionRequest) ProtoMessage()    {}
func (*DeactivateSubscriptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85e4db6795b5b1aa, []int{0}
}

func (m *DeactivateSubscriptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeactivateSubscriptionRequest.Unmarshal(m, b)
}
func (m *DeactivateSubscriptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeactivateSubscriptionRequest.Marshal(b, m, deterministic)
}
func (m *DeactivateSubscriptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeactivateSubscriptionRequest.Merge(m, src)
}
func (m *DeactivateSubscriptionRequest) XXX_Size() int {
	return xxx_messageInfo_DeactivateSubscriptionRequest.Size(m)
}
func (m *DeactivateSubscriptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeactivateSubscriptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeactivateSubscriptionRequest proto.InternalMessageInfo

func (m *DeactivateSubscriptionRequest) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

// Wrapper for subscription.
type ActivateSubscriptionRequest struct {
	// Required. A subscription.
	Subscription         *Subscription `protobuf:"bytes,1,opt,name=Subscription,proto3" json:"Subscription,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ActivateSubscriptionRequest) Reset()         { *m = ActivateSubscriptionRequest{} }
func (m *ActivateSubscriptionRequest) String() string { return proto.CompactTextString(m) }
func (*ActivateSubscriptionRequest) ProtoMessage()    {}
func (*ActivateSubscriptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85e4db6795b5b1aa, []int{1}
}

func (m *ActivateSubscriptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivateSubscriptionRequest.Unmarshal(m, b)
}
func (m *ActivateSubscriptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivateSubscriptionRequest.Marshal(b, m, deterministic)
}
func (m *ActivateSubscriptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateSubscriptionRequest.Merge(m, src)
}
func (m *ActivateSubscriptionRequest) XXX_Size() int {
	return xxx_messageInfo_ActivateSubscriptionRequest.Size(m)
}
func (m *ActivateSubscriptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateSubscriptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateSubscriptionRequest proto.InternalMessageInfo

func (m *ActivateSubscriptionRequest) GetSubscription() *Subscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

// Status is to be used standalone or wrapped in any response.
type Status struct {
	// This corresponds to `google.rpc.Status.code`.
	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// This corresponds to `google.rpc.Status.message`.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// A list of messages that carry the error details.  There is a common set of
	// message types for APIs to use.
	Details              []*any.Any `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_85e4db6795b5b1aa, []int{2}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Status) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Status) GetDetails() []*any.Any {
	if m != nil {
		return m.Details
	}
	return nil
}

// Subscription holds informaton related to how the push functionality should operate.
type Subscription struct {
	// Required. The full resource name of the subscription.
	FullName string `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	// The full topic name of the topic that the subscription is associated.
	FullTopic string `protobuf:"bytes,2,opt,name=full_topic,json=fullTopic,proto3" json:"full_topic,omitempty"`
	// Required. Information regarding the push functionality.
	PushConfig           *PushConfig `protobuf:"bytes,4,opt,name=PushConfig,proto3" json:"PushConfig,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Subscription) Reset()         { *m = Subscription{} }
func (m *Subscription) String() string { return proto.CompactTextString(m) }
func (*Subscription) ProtoMessage()    {}
func (*Subscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_85e4db6795b5b1aa, []int{3}
}

func (m *Subscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subscription.Unmarshal(m, b)
}
func (m *Subscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subscription.Marshal(b, m, deterministic)
}
func (m *Subscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscription.Merge(m, src)
}
func (m *Subscription) XXX_Size() int {
	return xxx_messageInfo_Subscription.Size(m)
}
func (m *Subscription) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscription.DiscardUnknown(m)
}

var xxx_messageInfo_Subscription proto.InternalMessageInfo

func (m *Subscription) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *Subscription) GetFullTopic() string {
	if m != nil {
		return m.FullTopic
	}
	return ""
}

func (m *Subscription) GetPushConfig() *PushConfig {
	if m != nil {
		return m.PushConfig
	}
	return nil
}

// PushConfig holds information on how a push subscription functions.
type PushConfig struct {
	// Required. An https endpoint to where the messages will be pushed.
	PushEndpoint string `protobuf:"bytes,1,opt,name=push_endpoint,json=pushEndpoint,proto3" json:"push_endpoint,omitempty"`
	// Required. Retry policy.
	RetryPolicy          *RetryPolicy `protobuf:"bytes,2,opt,name=RetryPolicy,proto3" json:"RetryPolicy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PushConfig) Reset()         { *m = PushConfig{} }
func (m *PushConfig) String() string { return proto.CompactTextString(m) }
func (*PushConfig) ProtoMessage()    {}
func (*PushConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_85e4db6795b5b1aa, []int{4}
}

func (m *PushConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushConfig.Unmarshal(m, b)
}
func (m *PushConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushConfig.Marshal(b, m, deterministic)
}
func (m *PushConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushConfig.Merge(m, src)
}
func (m *PushConfig) XXX_Size() int {
	return xxx_messageInfo_PushConfig.Size(m)
}
func (m *PushConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PushConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PushConfig proto.InternalMessageInfo

func (m *PushConfig) GetPushEndpoint() string {
	if m != nil {
		return m.PushEndpoint
	}
	return ""
}

func (m *PushConfig) GetRetryPolicy() *RetryPolicy {
	if m != nil {
		return m.RetryPolicy
	}
	return nil
}

// RetryPolicy holds information regarding the retry policy.
type RetryPolicy struct {
	// Required. Type of the retry policy used (Only linear policy supported).
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Required. Retry period in milliseconds.
	Period               uint32   `protobuf:"varint,2,opt,name=period,proto3" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetryPolicy) Reset()         { *m = RetryPolicy{} }
func (m *RetryPolicy) String() string { return proto.CompactTextString(m) }
func (*RetryPolicy) ProtoMessage()    {}
func (*RetryPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_85e4db6795b5b1aa, []int{5}
}

func (m *RetryPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetryPolicy.Unmarshal(m, b)
}
func (m *RetryPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetryPolicy.Marshal(b, m, deterministic)
}
func (m *RetryPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetryPolicy.Merge(m, src)
}
func (m *RetryPolicy) XXX_Size() int {
	return xxx_messageInfo_RetryPolicy.Size(m)
}
func (m *RetryPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_RetryPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_RetryPolicy proto.InternalMessageInfo

func (m *RetryPolicy) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *RetryPolicy) GetPeriod() uint32 {
	if m != nil {
		return m.Period
	}
	return 0
}

func init() {
	proto.RegisterType((*DeactivateSubscriptionRequest)(nil), "DeactivateSubscriptionRequest")
	proto.RegisterType((*ActivateSubscriptionRequest)(nil), "ActivateSubscriptionRequest")
	proto.RegisterType((*Status)(nil), "Status")
	proto.RegisterType((*Subscription)(nil), "Subscription")
	proto.RegisterType((*PushConfig)(nil), "PushConfig")
	proto.RegisterType((*RetryPolicy)(nil), "RetryPolicy")
}

func init() { proto.RegisterFile("ams.proto", fileDescriptor_85e4db6795b5b1aa) }

var fileDescriptor_85e4db6795b5b1aa = []byte{
	// 368 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0x51, 0x6b, 0xf2, 0x30,
	0x14, 0xfd, 0xfc, 0x14, 0xfd, 0xbc, 0xb5, 0x2f, 0x41, 0xa4, 0x9f, 0xce, 0x21, 0xdd, 0x8b, 0x30,
	0x88, 0xac, 0x7b, 0x1a, 0x0c, 0x86, 0xb8, 0xbd, 0x0e, 0x89, 0x7b, 0x97, 0xd8, 0xa6, 0x35, 0xd0,
	0x36, 0x5d, 0x93, 0x3a, 0xfa, 0x3b, 0xf6, 0x87, 0x47, 0xd3, 0x96, 0xb5, 0x20, 0x7d, 0xcb, 0x3d,
	0xf7, 0x24, 0xe7, 0x9e, 0x9c, 0x0b, 0x63, 0x1a, 0x49, 0x9c, 0xa4, 0x42, 0x89, 0xf9, 0xff, 0x40,
	0x88, 0x20, 0x64, 0x1b, 0x5d, 0x9d, 0x32, 0x7f, 0x43, 0xe3, 0xbc, 0x6c, 0xd9, 0xcf, 0xb0, 0x7c,
	0x65, 0xd4, 0x55, 0xfc, 0x42, 0x15, 0x3b, 0x64, 0x27, 0xe9, 0xa6, 0x3c, 0x51, 0x5c, 0xc4, 0x84,
	0x7d, 0x66, 0x4c, 0x2a, 0xb4, 0x80, 0xb1, 0x9f, 0x85, 0xe1, 0x31, 0xa6, 0x11, 0xb3, 0x7a, 0xab,
	0xde, 0x7a, 0x4c, 0xfe, 0x15, 0xc0, 0x3b, 0x8d, 0x98, 0xbd, 0x87, 0xc5, 0xb6, 0xe3, 0xee, 0x03,
	0x4c, 0x9a, 0xb0, 0xbe, 0x6e, 0x38, 0x26, 0x6e, 0x71, 0x5b, 0x14, 0xdb, 0x87, 0xe1, 0x41, 0x51,
	0x95, 0x49, 0x84, 0x60, 0xe0, 0x0a, 0xaf, 0xd4, 0x34, 0x89, 0x3e, 0x23, 0x0b, 0x46, 0x11, 0x93,
	0x92, 0x06, 0xcc, 0xfa, 0xab, 0x47, 0xa9, 0x4b, 0x84, 0x61, 0xe4, 0x31, 0x45, 0x79, 0x28, 0xad,
	0xfe, 0xaa, 0xbf, 0x36, 0x9c, 0x29, 0x2e, 0x4d, 0xe3, 0xda, 0x34, 0xde, 0xc6, 0x39, 0xa9, 0x49,
	0xf6, 0x57, 0x7b, 0xb4, 0x4e, 0x9b, 0x68, 0x09, 0xa0, 0x9b, 0x4a, 0x24, 0xdc, 0xad, 0x94, 0x35,
	0xfd, 0xa3, 0x00, 0xd0, 0x3d, 0xc0, 0x3e, 0x93, 0xe7, 0x9d, 0x88, 0x7d, 0x1e, 0x58, 0x03, 0x6d,
	0xd2, 0xc0, 0xbf, 0x10, 0x69, 0xb4, 0x6d, 0xda, 0x24, 0xa3, 0x3b, 0x30, 0x93, 0x4c, 0x9e, 0x8f,
	0x2c, 0xf6, 0x12, 0xc1, 0x63, 0x55, 0x49, 0x4f, 0x0a, 0xf0, 0xad, 0xc2, 0x10, 0x06, 0x83, 0x30,
	0x95, 0xe6, 0x7b, 0x11, 0x72, 0x37, 0xd7, 0xfa, 0x86, 0x33, 0xc1, 0x0d, 0x8c, 0x34, 0x09, 0xf6,
	0x53, 0x8b, 0x5f, 0x7c, 0xa4, 0xca, 0x93, 0xda, 0x95, 0x3e, 0xa3, 0x19, 0x0c, 0x13, 0x96, 0x72,
	0xe1, 0xe9, 0xd7, 0x4c, 0x52, 0x55, 0xce, 0x77, 0x0f, 0x8c, 0x62, 0xbc, 0x03, 0x4b, 0x2f, 0xdc,
	0x65, 0xe8, 0x05, 0xa6, 0xd7, 0x02, 0x46, 0x37, 0xb8, 0x23, 0xf7, 0xf9, 0x08, 0x97, 0x19, 0xda,
	0x7f, 0xd0, 0x0e, 0x66, 0xd7, 0xf7, 0x0b, 0xdd, 0xe2, 0xce, 0xc5, 0x6b, 0x3c, 0x72, 0x1a, 0xea,
	0x0c, 0x1f, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x95, 0x68, 0xd3, 0xda, 0xd3, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PushServiceClient is the client API for PushService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PushServiceClient interface {
	// Activates a subscription in order for the service to start handling the push functionality
	ActivateSubscription(ctx context.Context, in *ActivateSubscriptionRequest, opts ...grpc.CallOption) (*Status, error)
	//  Deactivates a subscription in order for the service to stop handling the push functionality
	DeactivateSubscription(ctx context.Context, in *DeactivateSubscriptionRequest, opts ...grpc.CallOption) (*Status, error)
}

type pushServiceClient struct {
	cc *grpc.ClientConn
}

func NewPushServiceClient(cc *grpc.ClientConn) PushServiceClient {
	return &pushServiceClient{cc}
}

func (c *pushServiceClient) ActivateSubscription(ctx context.Context, in *ActivateSubscriptionRequest, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/PushService/ActivateSubscription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushServiceClient) DeactivateSubscription(ctx context.Context, in *DeactivateSubscriptionRequest, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/PushService/DeactivateSubscription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PushServiceServer is the server API for PushService service.
type PushServiceServer interface {
	// Activates a subscription in order for the service to start handling the push functionality
	ActivateSubscription(context.Context, *ActivateSubscriptionRequest) (*Status, error)
	//  Deactivates a subscription in order for the service to stop handling the push functionality
	DeactivateSubscription(context.Context, *DeactivateSubscriptionRequest) (*Status, error)
}

func RegisterPushServiceServer(s *grpc.Server, srv PushServiceServer) {
	s.RegisterService(&_PushService_serviceDesc, srv)
}

func _PushService_ActivateSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateSubscriptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServiceServer).ActivateSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PushService/ActivateSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServiceServer).ActivateSubscription(ctx, req.(*ActivateSubscriptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushService_DeactivateSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeactivateSubscriptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServiceServer).DeactivateSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PushService/DeactivateSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServiceServer).DeactivateSubscription(ctx, req.(*DeactivateSubscriptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PushService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "PushService",
	HandlerType: (*PushServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ActivateSubscription",
			Handler:    _PushService_ActivateSubscription_Handler,
		},
		{
			MethodName: "DeactivateSubscription",
			Handler:    _PushService_DeactivateSubscription_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ams.proto",
}
